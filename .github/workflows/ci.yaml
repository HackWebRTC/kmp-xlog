# https://github.com/Kotlin/multiplatform-library-template/blob/main/.github/workflows/gradle.yml
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:

permissions:
  contents: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            cmd: "./gradlew :kmp-xlog:testDebugUnitTest"
          - os: macos-latest
            cmd: "./gradlew :example:androidApp:assembleDebug"
          - os: macos-latest
            dep: "brew update && brew install xcodegen"
            cmd: "./scripts/build_apple.sh && ./gradlew runKmp_xlogDebugExecutableMacosX64 && ./scripts/build_mac_demo.sh && ./scripts/build_ios_demo.sh"
          - os: ubuntu-22.04
            dep: "sudo apt-get update && sudo apt-get install zlib1g-dev"
            cmd: "./scripts/build_xlog_linux.sh && ./gradlew runKmp_xlogDebugExecutableLinuxX64"
          - os: windows-latest
            cmd: "./gradlew runKmp_xlogDebugExecutableMingwX64"
          - os: macos-latest
            cmd: "./gradlew :example:shared:jsBrowserDistribution"
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - uses: actions/cache@v4
      with:
        path: |
          ~/.konan
        key: ${{ runner.os }}-${{ hashFiles('**/.lock') }}
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - name: Install deps
      if: ${{ matrix.dep }}
      run: ${{ matrix.dep }}
    - name: Run it
      run: ${{ matrix.cmd }}
